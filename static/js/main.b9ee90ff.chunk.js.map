{"version":3,"sources":["components/Heading.js","components/SongListItem.js","components/SongPlayer.js","components/Songs.js","components/App.js","index.js"],"names":["Heading","props","title","SongListItem","song","isCurrent","onSelect","className","onClick","artist","SongPlayer","showControls","audioRef","useRef","audioUrl","coverUrl","width","height","src","alt","ref","controls","current","play","pause","Songs","children","App","useEffect","fetch","then","response","ok","json","setSongs","useState","songs","currentSongIndex","setCurrentSongIndex","currentSong","handleSelectSong","selectedSong","audioIndex","findIndex","length","map","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oQAAO,SAASA,EAAQC,GACtB,IAAMC,EAAQD,EAAMC,MACpB,OAAO,6BAAKA,I,MCAP,SAASC,EAAT,GAAsD,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SAK9C,OACE,qBACEC,UAAS,uBAAkBF,EAAY,WAAa,IACpDG,QAPJ,WACEF,EAASF,IAIT,UAIGC,GAAa,IAJhB,IAIsBD,EAAKF,MAJ3B,OAIsCE,EAAKK,OAJ3C,IAIoDJ,GAAa,O,MCR9D,SAASK,EAAT,GAAqD,IAAD,IAA9BC,oBAA8B,SAARP,EAAQ,EAARA,KAC3CQ,EAAWC,mBACTC,EAAuBV,EAAvBU,SAAUC,EAAaX,EAAbW,SAClB,OACE,0BAASR,UAAU,aAAnB,UACE,cAACP,EAAD,CAASE,MAAM,iBACf,qBAAKc,MAAM,MAAMC,OAAO,MAAMC,IAAKH,EAAUI,IAAI,eACjD,uBAAOC,IAAKR,EAAyBS,SAAUV,EAA/C,SACE,wBAAQO,IAAKJ,KADYA,GAG3B,gCACE,wBAAQN,QAAS,kBAAMI,EAASU,QAAQC,QAAxC,kBACA,wBAAQf,QAAS,kBAAMI,EAASU,QAAQE,SAAxC,yB,MCdD,SAASC,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SACtB,OAAO,yBAASnB,UAAU,QAAnB,SAA4BmB,I,MCK9B,SAASC,IAEdC,qBAAU,WACRC,MAFkB,kDAECC,MAAK,SAACC,GACnBA,EAASC,IACXD,EAASE,OAAOH,KAAKI,QAGxB,IARiB,MASMC,mBAAS,IATf,mBASbC,EATa,KASNF,EATM,OAU4BC,mBAAS,GAVrC,mBAUbE,EAVa,KAUKC,EAVL,KAWdC,EAAcH,EAAMC,GAE1B,SAASG,EAAiBC,GACxB,IAAMC,EAAaN,EAAMO,WACvB,SAACvC,GAAD,OAAUA,EAAKU,WAAa2B,EAAa3B,YAEvC4B,GAAc,GAChBJ,EAAoBI,GAIxB,OACE,qBAAKnC,UAAU,MAAf,SACoB,IAAjB6B,EAAMQ,OACL,aAEA,qCACE,cAAC,EAAD,CAAYxC,KAAMmC,IAClB,eAAC,EAAD,WACE,cAACvC,EAAD,CAASE,MAAM,aACf,6BACGkC,EAAMS,KAAI,SAACzC,GAAD,OACT,cAACD,EAAD,CAEEC,KAAMA,EACNC,UAAWkC,EAAYzB,WAAaV,EAAKU,SACzCR,SAAUkC,GAHLpC,EAAKU,uB,UCpCtBgC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.b9ee90ff.chunk.js","sourcesContent":["export function Heading(props) {\r\n  const title = props.title;\r\n  return <h1>{title}</h1>;\r\n}\r\n","import \"./SongsListItem.css\";\r\n\r\nexport function SongListItem({ song, isCurrent, onSelect }) {\r\n  function handleClick() {\r\n    onSelect(song);\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={`SongListItem ${isCurrent ? \"selected\" : \"\"}`}\r\n      onClick={handleClick}\r\n    >\r\n      {isCurrent && \"*\"} {song.title} by {song.artist} {isCurrent && \"*\"}\r\n    </li>\r\n  );\r\n}\r\n","import { useRef } from \"react\";\r\nimport { Heading } from \"./Heading\";\r\nimport \"./SongPlayer.css\";\r\n\r\nexport function SongPlayer({ showControls = false, song }) {\r\n  const audioRef = useRef();\r\n  const { audioUrl, coverUrl } = song;\r\n  return (\r\n    <section className=\"SongPlayer\">\r\n      <Heading title=\"Music Player\" />\r\n      <img width=\"250\" height=\"250\" src={coverUrl} alt=\"Song cover\" />\r\n      <audio ref={audioRef} key={audioUrl} controls={showControls}>\r\n        <source src={audioUrl} />\r\n      </audio>\r\n      <div>\r\n        <button onClick={() => audioRef.current.play()}>Play</button>\r\n        <button onClick={() => audioRef.current.pause()}>Pause</button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import \"./Songs.css\";\r\n\r\nexport function Songs({ children }) {\r\n  return <section className=\"Songs\">{children}</section>;\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport { Heading } from \"./Heading\";\nimport { SongListItem } from \"./SongListItem\";\nimport { SongPlayer } from \"./SongPlayer\";\nimport { Songs } from \"./Songs\";\n\nimport \"./App.css\";\n\nexport function App() {\n  const playlistURL = \"https://examples.devmastery.pl/songs-api/songs\";\n  useEffect(() => {\n    fetch(playlistURL).then((response) => {\n      if (response.ok) {\n        response.json().then(setSongs);\n      }\n    });\n  }, []);\n  const [songs, setSongs] = useState([]);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const currentSong = songs[currentSongIndex];\n  // const currentSong = songs[1];\n  function handleSelectSong(selectedSong) {\n    const audioIndex = songs.findIndex(\n      (song) => song.audioUrl === selectedSong.audioUrl\n    );\n    if (audioIndex >= 0) {\n      setCurrentSongIndex(audioIndex);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {songs.length === 0 ? (\n        \"Loading...\"\n      ) : (\n        <>\n          <SongPlayer song={currentSong} />\n          <Songs>\n            <Heading title=\"Playlist\" />\n            <ul>\n              {songs.map((song) => (\n                <SongListItem\n                  key={song.audioUrl}\n                  song={song}\n                  isCurrent={currentSong.audioUrl === song.audioUrl}\n                  onSelect={handleSelectSong}\n                />\n              ))}\n            </ul>\n          </Songs>\n        </>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./components/App\";\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}